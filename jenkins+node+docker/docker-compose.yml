
services:
  jenkins:
    # user: root
    # privileged: true
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jenkins-node
    ports:
      - "8082:8080"
      # - "50000:50000"
    volumes:
      - jenkins-files_jenkins_home1:/var/jenkins_home  # <--- aquí puedes poner el nombre exacto de tu volumen antiguo
      #  no la necesito por star en un entorno de windows
      # - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOCKER_HOST=tcp://host.docker.internal:2375
    networks:
      - jenkins-sonar
    restart: always

  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
   
    environment:  # <--- configuras el aceso a la base de datos PostgreSQL
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube_db:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - jenkins-sonar
    restart: always
 
  postgres:
    image: postgres:15
    container_name: sonarqube_db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonarqube
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    networks:
      - jenkins-sonar

volumes:
  jenkins-files_jenkins_home1: {}
  sonarqube_data: {}
  sonarqube_extensions: {}
    # external: true  # si tu volumen ya existía, le dice a Docker Compose que no lo cree nuevo
networks:
  jenkins-sonar: